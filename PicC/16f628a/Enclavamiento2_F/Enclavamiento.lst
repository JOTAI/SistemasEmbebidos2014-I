CCS PCM C Compiler, Version 5.008, 5967               21-jun-14 19:20

               Filename:   D:\IGNACIO\Programacion\Microcontroladores\PicC\16f628a\Enclavamiento2_PR\Enclavamiento.lst

               ROM used:   85 words (4%)
                           Largest free fragment is 1963
               RAM used:   13 (6%) at main() level
                           14 (6%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   048
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  BTFSS  0B.4
001B:  GOTO   01E
001C:  BTFSC  0B.1
001D:  GOTO   02F
001E:  MOVF   22,W
001F:  MOVWF  04
0020:  MOVF   23,W
0021:  MOVWF  77
0022:  MOVF   24,W
0023:  MOVWF  78
0024:  MOVF   25,W
0025:  MOVWF  79
0026:  MOVF   26,W
0027:  MOVWF  7A
0028:  MOVF   27,W
0029:  MOVWF  0A
002A:  SWAPF  21,W
002B:  MOVWF  03
002C:  SWAPF  7F,F
002D:  SWAPF  7F,W
002E:  RETFIE
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
....................  
.................... #list 
....................  
....................  
.................... #FUSES HS,NOWDT,NOPROTECT,NOLVP 
.................... #use delay(internal=4000000) 
....................  
.................... #USE FAST_IO(B)   //Puerto B 
.................... #USE FAST_IO(A)   //Puerto D 
.................... //#BIT RBIF = 0x0B.0 
.................... #BYTE CMCON = 0x1F 
....................  
....................  
.................... // ***************************************************************** 
.................... // Declaracion de Funciones 
.................... void Configuracion(); 
.................... void Configurar_interrupciones(); 
.................... void Variar_led(); 
....................  
.................... //****************************************************************** 
....................  
.................... // ***************************************************************** 
.................... // Declaracion de las Interrupciones 
.................... #INT_EXT       //Sentencias de la interrupcion RB0 
.................... void ext_isr(){ 
....................    Variar_led(); 
*
0034:  BCF    0B.1
0035:  BCF    0A.3
0036:  GOTO   01E
.................... } 
....................  
.................... //****************************************************************** 
....................  
.................... // ***************************************************************** 
.................... // Funcion Prinipal 
.................... void main() 
*
0048:  MOVF   03,W
0049:  ANDLW  1F
004A:  MOVWF  03
004B:  BSF    03.5
004C:  BSF    0E.3
004D:  MOVLW  07
004E:  BCF    03.5
004F:  MOVWF  1F
0050:  BCF    03.7
.................... { 
....................    Configuracion(); 
0051:  GOTO   037
....................    Configurar_interrupciones(); 
0052:  GOTO   041
....................    while(TRUE) 
....................    { 
0053:  GOTO   053
....................  
....................    } 
....................  
.................... } 
.................... //***************************************************************** 
0054:  SLEEP
....................  
.................... // **************************************************************** 
.................... // Definicion de Funciones 
.................... void Configuracion(){ 
....................    SET_TRIS_B(0xFF);    //configura PORTB entrada / 0=salida / 1=entrada 
*
0037:  MOVLW  FF
0038:  BSF    03.5
0039:  MOVWF  06
....................    SET_TRIS_A(0x00);    //configura PORTD salida   
003A:  MOVLW  00
003B:  MOVWF  05
....................    OUTPUT_A(0x00);   //inicializando PORTD en 0x00 
003C:  BCF    03.5
003D:  CLRF   05
....................    CMCON = 0x07; 
003E:  MOVLW  07
003F:  MOVWF  1F
0040:  GOTO   052 (RETURN)
.................... } 
....................  
.................... void Configurar_interrupciones(){ 
....................  
....................    enable_interrupts(INT_EXT);    // Habilita la interrupcion RB0 
0041:  BSF    0B.4
....................    ext_int_edge(L_TO_H);         // Flag INTF si flanco de bajada / H_TO_L bajada 
0042:  BSF    03.5
0043:  BSF    01.6
....................    enable_interrupts(GLOBAL); 
0044:  MOVLW  C0
0045:  BCF    03.5
0046:  IORWF  0B,F
0047:  GOTO   053 (RETURN)
....................  
.................... } 
....................  
.................... void Variar_led(){ 
....................    if (input(PIN_A0) == 1 ){ 
*
002F:  BTFSS  05.0
0030:  GOTO   033
....................          output_low(PIN_A0);   //establece la salida del PORTD 
0031:  BCF    05.0
....................       }else { 
0032:  GOTO   034
....................          output_high(PIN_A0); 
0033:  BSF    05.0
....................       } 
.................... } 
....................  
.................... //**************************************************************** 

Configuration Fuses:
   Word  1: 3F70   NOWDT PUT INTRC_IO MCLR BROWNOUT NOLVP NOCPD NOPROTECT
