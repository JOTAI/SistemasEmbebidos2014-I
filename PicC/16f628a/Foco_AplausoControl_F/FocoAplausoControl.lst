CCS PCM C Compiler, Version 5.008, 5967               15-jun-14 04:09

               Filename:   D:\IGNACIO\Programacion\Microcontroladores\PicC\16f628a\Foco_AplausoControl_NF\FocoAplausoControl.lst

               ROM used:   101 words (5%)
                           Largest free fragment is 1947
               RAM used:   13 (6%) at main() level
                           14 (6%) worst case
               Stack used: 3 locations (1 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05B
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  BTFSS  0B.3
001B:  GOTO   01E
001C:  BTFSC  0B.0
001D:  GOTO   03D
001E:  BTFSS  0B.4
001F:  GOTO   022
0020:  BTFSC  0B.1
0021:  GOTO   039
0022:  MOVF   22,W
0023:  MOVWF  04
0024:  MOVF   23,W
0025:  MOVWF  77
0026:  MOVF   24,W
0027:  MOVWF  78
0028:  MOVF   25,W
0029:  MOVWF  79
002A:  MOVF   26,W
002B:  MOVWF  7A
002C:  MOVF   27,W
002D:  MOVWF  0A
002E:  SWAPF  21,W
002F:  MOVWF  03
0030:  SWAPF  7F,F
0031:  SWAPF  7F,W
0032:  RETFIE
.................... #include <16F628.h> 
.................... //////// Standard Header file for the PIC16F628 device //////////////// 
.................... #device PIC16F628 
....................  
.................... #list 
....................  
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
....................  
.................... #use delay(internal=4000000) 
.................... #USE FAST_IO(A)   //Puerto A 
.................... #USE FAST_IO(B)   //Puerto B 
....................  
....................  
....................  
.................... // ********************************************** 
.................... // Declaracion de las funciones 
.................... void Cargar_configuracion(); 
.................... void Configurar_interrupciones(); 
.................... void invertir_PORTA(); 
.................... //*********************************************** 
....................  
....................  
.................... // ********************************************** 
.................... // Interrupciones 
.................... #INT_EXT             // Interrupcion RB0 
.................... void  EXT_isr(void)  
.................... { 
....................    invertir_PORTA(); 
*
0039:  CALL   033
.................... } 
003A:  BCF    0B.1
003B:  BCF    0A.3
003C:  GOTO   022
.................... #INT_RB 
.................... void  RB_isr(void) { 
....................    if (input(PIN_B4) == 1 ){ 
003D:  BTFSS  06.4
003E:  GOTO   041
....................       invertir_PORTA(); 
003F:  CALL   033
....................    } else if (input(PIN_B5) == 1){ 
0040:  GOTO   047
0041:  BTFSC  06.5
....................  
....................    }else if (input(PIN_B6) == 1){ 
0042:  GOTO   047
0043:  BTFSC  06.6
....................  
....................    }else if (input(PIN_B7) == 1){ 
0044:  GOTO   047
0045:  BTFSS  06.7
0046:  GOTO   047
....................  
....................    } 
0047:  BCF    0B.0
0048:  BCF    0A.3
0049:  GOTO   022
.................... } 
....................  
.................... //*********************************************** 
....................  
.................... // ********************************************** 
.................... // Funcion Principal 
.................... void main() 
*
005B:  MOVF   03,W
005C:  ANDLW  1F
005D:  MOVWF  03
005E:  MOVLW  07
005F:  MOVWF  1F
0060:  BCF    03.7
.................... { 
....................    Cargar_configuracion(); 
0061:  GOTO   04A
....................    Configurar_interrupciones(); 
0062:  GOTO   053
....................    while(TRUE) 
....................    { 
0063:  GOTO   063
....................       //TODO: User Code 
....................    } 
....................  
.................... } 
.................... //********************************************** 
0064:  SLEEP
....................  
....................  
.................... // ********************************************* 
.................... // Definicion de las funciones 
....................  
.................... void Cargar_configuracion() { 
....................    SET_TRIS_B(0xFF);    //configura PORTB entrada / 0=salida / 1=entrada 
*
004A:  MOVLW  FF
004B:  BSF    03.5
004C:  MOVWF  06
....................    SET_TRIS_A(0x00);    //configura PORTA salida 
004D:  MOVLW  00
004E:  MOVWF  05
....................    OUTPUT_A(0xFF);   //inicializando PORTD en 0x00 
004F:  MOVLW  FF
0050:  BCF    03.5
0051:  MOVWF  05
0052:  GOTO   062 (RETURN)
.................... } 
.................... void Configurar_interrupciones(){ 
....................    enable_interrupts(INT_EXT);   // habilitar interrupcion del RB0 /INTE 
0053:  BSF    0B.4
....................    ext_int_edge(L_TO_H);         // Flag INTF si flanco de bajada / H_TO_L bajada 
0054:  BSF    03.5
0055:  BSF    01.6
....................    enable_interrupts(INT_RB);    // habilita interrupcion del RB  
0056:  BCF    03.5
0057:  BSF    0B.3
....................    enable_interrupts(GLOBAL); 
0058:  MOVLW  C0
0059:  IORWF  0B,F
005A:  GOTO   063 (RETURN)
.................... } 
....................  
.................... void invertir_PORTA(){ 
....................    if (input(PIN_A0) == 1 ){  
*
0033:  BTFSS  05.0
0034:  GOTO   037
....................       output_low(PIN_A0); 
0035:  BCF    05.0
....................    }else { 
0036:  GOTO   038
....................       output_high(PIN_A0); 
0037:  BSF    05.0
....................    } 
0038:  RETURN
.................... } 
.................... //********************************************** 

Configuration Fuses:
   Word  1: 3F30   NOWDT PUT INTRC_IO MCLR NOBROWNOUT NOLVP NOCPD NOPROTECT
