CCS PCM C Compiler, Version 5.008, 5967               17-abr-14 21:33

               Filename:   D:\IGNACIO\Programacion\Microcontroladores\PicC\16f628\Dimmer\Dimmer_1main.lst

               ROM used:   194 words (9%)
                           Largest free fragment is 1854
               RAM used:   16 (7%) at main() level
                           20 (9%) worst case
               Stack used: 4 locations (1 in main + 3 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0AF
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   7F,W
0009:  MOVWF  20
000A:  MOVF   0A,W
000B:  MOVWF  27
000C:  CLRF   0A
000D:  SWAPF  20,F
000E:  MOVF   04,W
000F:  MOVWF  22
0010:  MOVF   77,W
0011:  MOVWF  23
0012:  MOVF   78,W
0013:  MOVWF  24
0014:  MOVF   79,W
0015:  MOVWF  25
0016:  MOVF   7A,W
0017:  MOVWF  26
0018:  BCF    03.7
0019:  BCF    03.5
001A:  BTFSS  0B.4
001B:  GOTO   01E
001C:  BTFSC  0B.1
001D:  GOTO   07F
001E:  MOVF   22,W
001F:  MOVWF  04
0020:  MOVF   23,W
0021:  MOVWF  77
0022:  MOVF   24,W
0023:  MOVWF  78
0024:  MOVF   25,W
0025:  MOVWF  79
0026:  MOVF   26,W
0027:  MOVWF  7A
0028:  MOVF   27,W
0029:  MOVWF  0A
002A:  SWAPF  21,W
002B:  MOVWF  03
002C:  SWAPF  7F,F
002D:  SWAPF  7F,W
002E:  RETFIE
.................... #include <16F628A.h> 
.................... //////// Standard Header file for the PIC16F628A device //////////////// 
.................... #device PIC16F628A 
*
0073:  BCF    0A.0
0074:  BCF    0A.1
0075:  BCF    0A.2
0076:  ADDWF  02,F
0077:  GOTO   04A
0078:  GOTO   04C
0079:  GOTO   051
007A:  GOTO   056
007B:  GOTO   05B
007C:  GOTO   060
007D:  GOTO   065
007E:  GOTO   06A
....................  
.................... #list 
....................  
....................  
.................... #FUSES HS,NOWDT,NOPROTECT,NOLVP 
.................... #USE delay(internal=4000000) 
*
002F:  MOVLW  2E
0030:  MOVWF  04
0031:  BCF    03.7
0032:  MOVF   00,W
0033:  BTFSC  03.2
0034:  GOTO   043
0035:  MOVLW  01
0036:  MOVWF  78
0037:  CLRF   77
0038:  DECFSZ 77,F
0039:  GOTO   038
003A:  DECFSZ 78,F
003B:  GOTO   037
003C:  MOVLW  4A
003D:  MOVWF  77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  GOTO   041
0041:  DECFSZ 00,F
0042:  GOTO   035
0043:  RETURN
.................... #BYTE PORTA = 0x05   //Asignando PORTD 
.................... #USE FAST_IO(B)   //Puerto B 
.................... #USE FAST_IO(A)   //Puerto D 
....................  
.................... // Creacion de Variables 
.................... int angulo = 0; 
.................... int Portb1_ant = 0; 
.................... int Portb1_now = 0; 
.................... // Fin de Creacion de Variables 
....................  
.................... // ************************************** 
.................... // Declaracion de Funciones 
.................... void Cargar_configuracion(); 
.................... void Configurar_interrupciones(); 
.................... void VariacionAnguloAplauso (int incremento); 
.................... void Disparar(int ang); 
.................... // ************************************** 
....................  
.................... // ************************************** 
.................... // Declaracion de las Interrupciones 
.................... #INT_EXT       //Sentencias de la interrupcion RB0 
.................... void ext_isr(){ 
....................    Disparar(angulo); 
*
007F:  MOVF   28,W
0080:  MOVWF  2D
0081:  GOTO   044
0082:  BCF    0B.1
0083:  BCF    0A.3
0084:  GOTO   01E
....................    } 
.................... // ************************************************** 
....................  
.................... // FUNCION PRINCIPAL 
.................... void main() 
*
00AF:  MOVF   03,W
00B0:  ANDLW  1F
00B1:  MOVWF  03
00B2:  BSF    03.5
00B3:  BSF    0E.3
00B4:  BCF    03.5
00B5:  CLRF   28
00B6:  CLRF   29
00B7:  CLRF   2A
00B8:  MOVLW  07
00B9:  MOVWF  1F
00BA:  BCF    03.7
.................... {   
....................    Cargar_configuracion(); 
00BB:  GOTO   085
....................    Configurar_interrupciones(); 
00BC:  GOTO   08F
....................        
....................    while(true) 
....................    {   
....................       VariacionAnguloAplauso(1); 
00BD:  MOVLW  01
00BE:  MOVWF  2B
00BF:  GOTO   097
00C0:  GOTO   0BD
....................    } 
.................... } 
....................  
00C1:  SLEEP
.................... // **************************************** 
.................... // Definicion de las Funciones 
....................  
.................... void VariacionAnguloAplauso (int incremento){ 
....................    // Portb1_ant y Portb1_now  fueron iniciados en 0 
....................    if (input(PIN_B1) == 1){        //  verifica si el PORTB,1 es 1 
*
0097:  BTFSS  06.1
0098:  GOTO   09E
....................          Portb1_ant = Portb1_now; 
0099:  MOVF   2A,W
009A:  MOVWF  29
....................          Portb1_now = 1; 
009B:  MOVLW  01
009C:  MOVWF  2A
....................       }else { 
009D:  GOTO   0A1
....................          Portb1_ant = Portb1_now; 
009E:  MOVF   2A,W
009F:  MOVWF  29
....................          Portb1_now = 0; 
00A0:  CLRF   2A
....................       } 
....................     if (Portb1_ant == 0 && Portb1_now == 1){ 
00A1:  MOVF   29,F
00A2:  BTFSS  03.2
00A3:  GOTO   0AE
00A4:  DECFSZ 2A,W
00A5:  GOTO   0AE
....................          if(angulo >= 7){ 
00A6:  MOVF   28,W
00A7:  SUBLW  06
00A8:  BTFSC  03.0
00A9:  GOTO   0AC
....................             angulo = 0; 
00AA:  CLRF   28
....................          }else { 
00AB:  GOTO   0AE
....................             angulo = angulo + incremento; 
00AC:  MOVF   2B,W
00AD:  ADDWF  28,F
....................          } 
....................       } 
00AE:  GOTO   0C0 (RETURN)
.................... } 
....................  
.................... void Cargar_configuracion(){ 
....................    SET_TRIS_B(0xFF);    //configura PORTB entrada / 0=salida / 1=entrada 
*
0085:  MOVLW  FF
0086:  BSF    03.5
0087:  MOVWF  06
....................    SET_TRIS_A(0x00);    //configura PORTD salida 
0088:  MOVLW  00
0089:  MOVWF  05
....................    OUTPUT_A(0x00);   //inicializando PORTD en 0x00 
008A:  BCF    03.5
008B:  CLRF   05
....................    angulo = 2;       // inicializando el angulo de dispario en 2ms 
008C:  MOVLW  02
008D:  MOVWF  28
008E:  GOTO   0BC (RETURN)
.................... } 
....................  
.................... void Configurar_interrupciones(){ 
....................    enable_interrupts(INT_EXT);   // habilitar interrupcion del RB0 /INTE 
008F:  BSF    0B.4
....................    ext_int_edge(L_TO_H);         // Flag INTF si flanco de bajada / H_TO_L bajada 
0090:  BSF    03.5
0091:  BSF    01.6
....................    enable_interrupts(INT_RB); 
0092:  BCF    03.5
0093:  BSF    0B.3
....................    enable_interrupts(GLOBAL); 
0094:  MOVLW  C0
0095:  IORWF  0B,F
0096:  GOTO   0BD (RETURN)
.................... } 
....................  
.................... void Disparar(int ang){ 
....................    switch (ang){ 
*
0044:  MOVF   2D,W
0045:  ADDLW  F8
0046:  BTFSC  03.0
0047:  GOTO   06E
0048:  ADDLW  08
0049:  GOTO   073
....................       case 0 :  
....................                bit_set(PORTA,0); 
004A:  BSF    05.0
....................          break; 
004B:  GOTO   06E
....................       case 1 : delay_ms(1); 
004C:  MOVLW  01
004D:  MOVWF  2E
004E:  CALL   02F
....................                bit_set(PORTA,0); 
004F:  BSF    05.0
....................          break; 
0050:  GOTO   06E
....................       case 2 : delay_ms(2); 
0051:  MOVLW  02
0052:  MOVWF  2E
0053:  CALL   02F
....................                bit_set(PORTA,0); 
0054:  BSF    05.0
....................          break; 
0055:  GOTO   06E
....................       case 3 : delay_ms(3); 
0056:  MOVLW  03
0057:  MOVWF  2E
0058:  CALL   02F
....................                bit_set(PORTA,0); 
0059:  BSF    05.0
....................          break; 
005A:  GOTO   06E
....................       case 4 : delay_ms(4); 
005B:  MOVLW  04
005C:  MOVWF  2E
005D:  CALL   02F
....................                bit_set(PORTA,0); 
005E:  BSF    05.0
....................          break; 
005F:  GOTO   06E
....................       case 5 : delay_ms(5); 
0060:  MOVLW  05
0061:  MOVWF  2E
0062:  CALL   02F
....................                bit_set(PORTA,0); 
0063:  BSF    05.0
....................          break; 
0064:  GOTO   06E
....................       case 6 : delay_ms(6); 
0065:  MOVLW  06
0066:  MOVWF  2E
0067:  CALL   02F
....................                bit_set(PORTA,0); 
0068:  BSF    05.0
....................          break; 
0069:  GOTO   06E
....................       case 7 : delay_ms(7); 
006A:  MOVLW  07
006B:  MOVWF  2E
006C:  CALL   02F
....................                bit_set(PORTA,0); 
006D:  BSF    05.0
....................          break; 
....................    } 
....................       delay_ms(1); 
006E:  MOVLW  01
006F:  MOVWF  2E
0070:  CALL   02F
....................       bit_clear(PORTA,0); 
0071:  BCF    05.0
0072:  GOTO   082 (RETURN)
.................... } 
.................... //***************************************** 

Configuration Fuses:
   Word  1: 3F70   NOWDT PUT INTRC_IO MCLR BROWNOUT NOLVP NOCPD NOPROTECT
