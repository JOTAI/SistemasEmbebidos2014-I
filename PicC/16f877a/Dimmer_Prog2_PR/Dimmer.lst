CCS PCM C Compiler, Version 5.008, 5967               14-jun-14 20:57

               Filename:   D:\IGNACIO\Programacion\Microcontroladores\PicC\16f877a\Dimmer\Dimmer.lst

               ROM used:   205 words (3%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           19 (5%) worst case
               Stack used: 4 locations (1 in main + 3 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0B7
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   080
.................... #include <16f877a.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
*
0074:  BCF    0A.0
0075:  BCF    0A.1
0076:  BCF    0A.2
0077:  ADDWF  02,F
0078:  GOTO   049
0079:  GOTO   04B
007A:  GOTO   050
007B:  GOTO   055
007C:  GOTO   05A
007D:  GOTO   05F
007E:  GOTO   064
007F:  GOTO   069
....................  
.................... #list 
....................  
.................... #FUSES HS,NOWDT,NOPROTECT,NOLVP  
.................... #USE delay(clock=20000000) 
*
002F:  MOVLW  2D
0030:  MOVWF  04
0031:  BCF    03.7
0032:  MOVF   00,W
0033:  BTFSC  03.2
0034:  GOTO   042
0035:  MOVLW  06
0036:  MOVWF  78
0037:  CLRF   77
0038:  DECFSZ 77,F
0039:  GOTO   038
003A:  DECFSZ 78,F
003B:  GOTO   037
003C:  MOVLW  7B
003D:  MOVWF  77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  DECFSZ 00,F
0041:  GOTO   035
0042:  RETURN
.................... #BYTE PORTD = 0x08   //Asignando PORTD 
.................... #USE FAST_IO(B)   //Puerto B 
.................... #USE FAST_IO(D)   //Puerto D 
....................  
.................... // Creacion de Variables 
.................... int angulo = 0; 
.................... int Portb1_ant = 0; 
.................... int Portb1_now = 0; 
.................... // Fin de Creacion de Variables 
....................  
.................... // ************************************** 
.................... // Declaracion de Funciones 
.................... void Cargar_configuracion(); 
.................... void Configurar_interrupciones(); 
.................... void VariacionAnguloAplauso (int incremento); 
.................... void Disparar(int ang); 
.................... // ************************************** 
....................  
.................... // ************************************** 
.................... // Declaracion de las Interrupciones 
.................... #INT_EXT       //Sentencias de la interrupcion RB0 
.................... void ext_isr(){ 
....................    Disparar(angulo); 
*
0080:  MOVF   27,W
0081:  MOVWF  2C
0082:  GOTO   043
0083:  BCF    0B.1
0084:  BCF    0A.3
0085:  BCF    0A.4
0086:  GOTO   01B
....................    } 
.................... // ************************************************** 
....................  
.................... // FUNCION PRINCIPAL 
.................... void main() 
*
00B7:  MOVF   03,W
00B8:  ANDLW  1F
00B9:  MOVWF  03
00BA:  CLRF   27
00BB:  CLRF   28
00BC:  CLRF   29
00BD:  BSF    03.5
00BE:  BSF    1F.0
00BF:  BSF    1F.1
00C0:  BSF    1F.2
00C1:  BCF    1F.3
00C2:  MOVLW  07
00C3:  MOVWF  1C
00C4:  BCF    03.7
.................... {   
....................    Cargar_configuracion(); 
00C5:  BCF    03.5
00C6:  GOTO   087
....................    Configurar_interrupciones(); 
00C7:  GOTO   093
....................        
....................    while(true) 
....................    {   
....................       VariacionAnguloAplauso(1); 
00C8:  MOVLW  01
00C9:  MOVWF  2A
00CA:  GOTO   09D
00CB:  GOTO   0C8
....................    } 
.................... } 
....................  
00CC:  SLEEP
.................... // **************************************** 
.................... // Definicion de las Funciones 
....................  
.................... void VariacionAnguloAplauso (int incremento){ 
....................    // Portb1_ant y Portb1_now  fueron iniciados en 0 
....................    if (input(PIN_B1) == 1){        //  verifica si el PORTB,1 es 1 
*
009D:  BTFSS  06.1
009E:  GOTO   0A4
....................          Portb1_ant = Portb1_now; 
009F:  MOVF   29,W
00A0:  MOVWF  28
....................          Portb1_now = 1; 
00A1:  MOVLW  01
00A2:  MOVWF  29
....................       }else { 
00A3:  GOTO   0A7
....................          Portb1_ant = Portb1_now; 
00A4:  MOVF   29,W
00A5:  MOVWF  28
....................          Portb1_now = 0; 
00A6:  CLRF   29
....................       } 
....................     if (Portb1_ant == 0 && Portb1_now == 1){ 
00A7:  MOVF   28,F
00A8:  BTFSS  03.2
00A9:  GOTO   0B4
00AA:  DECFSZ 29,W
00AB:  GOTO   0B4
....................          if(angulo >= 7){ 
00AC:  MOVF   27,W
00AD:  SUBLW  06
00AE:  BTFSC  03.0
00AF:  GOTO   0B2
....................             angulo = 0; 
00B0:  CLRF   27
....................          }else { 
00B1:  GOTO   0B4
....................             angulo = angulo + incremento; 
00B2:  MOVF   2A,W
00B3:  ADDWF  27,F
....................          } 
....................       } 
00B4:  BCF    0A.3
00B5:  BCF    0A.4
00B6:  GOTO   0CB (RETURN)
.................... } 
....................  
.................... void Cargar_configuracion(){ 
....................    SET_TRIS_B(0xFF);    //configura PORTB entrada / 0=salida / 1=entrada 
*
0087:  MOVLW  FF
0088:  BSF    03.5
0089:  MOVWF  06
....................    SET_TRIS_D(0x00);    //configura PORTD salida 
008A:  MOVLW  00
008B:  MOVWF  08
....................    OUTPUT_D(0x00);   //inicializando PORTD en 0x00 
008C:  BCF    03.5
008D:  CLRF   08
....................    angulo = 2;       // inicializando el angulo de dispario en 2ms 
008E:  MOVLW  02
008F:  MOVWF  27
0090:  BCF    0A.3
0091:  BCF    0A.4
0092:  GOTO   0C7 (RETURN)
.................... } 
....................  
.................... void Configurar_interrupciones(){ 
....................    enable_interrupts(INT_EXT);   // habilitar interrupcion del RB0 /INTE 
0093:  BSF    0B.4
....................    ext_int_edge(L_TO_H);         // Flag INTF si flanco de bajada / H_TO_L bajada 
0094:  BSF    03.5
0095:  BSF    01.6
....................    enable_interrupts(INT_RB); 
0096:  BCF    03.5
0097:  BSF    0B.3
....................    enable_interrupts(GLOBAL); 
0098:  MOVLW  C0
0099:  IORWF  0B,F
009A:  BCF    0A.3
009B:  BCF    0A.4
009C:  GOTO   0C8 (RETURN)
.................... } 
....................  
.................... void Disparar(int ang){ 
....................    switch (ang){ 
*
0043:  MOVF   2C,W
0044:  ADDLW  F8
0045:  BTFSC  03.0
0046:  GOTO   06D
0047:  ADDLW  08
0048:  GOTO   074
....................       case 0 :  
....................                bit_set(PORTD,0); 
0049:  BSF    08.0
....................          break; 
004A:  GOTO   06D
....................       case 1 : delay_ms(1); 
004B:  MOVLW  01
004C:  MOVWF  2D
004D:  CALL   02F
....................                bit_set(PORTD,0); 
004E:  BSF    08.0
....................          break; 
004F:  GOTO   06D
....................       case 2 : delay_ms(2); 
0050:  MOVLW  02
0051:  MOVWF  2D
0052:  CALL   02F
....................                bit_set(PORTD,0); 
0053:  BSF    08.0
....................          break; 
0054:  GOTO   06D
....................       case 3 : delay_ms(3); 
0055:  MOVLW  03
0056:  MOVWF  2D
0057:  CALL   02F
....................                bit_set(PORTD,0); 
0058:  BSF    08.0
....................          break; 
0059:  GOTO   06D
....................       case 4 : delay_ms(4); 
005A:  MOVLW  04
005B:  MOVWF  2D
005C:  CALL   02F
....................                bit_set(PORTD,0); 
005D:  BSF    08.0
....................          break; 
005E:  GOTO   06D
....................       case 5 : delay_ms(5); 
005F:  MOVLW  05
0060:  MOVWF  2D
0061:  CALL   02F
....................                bit_set(PORTD,0); 
0062:  BSF    08.0
....................          break; 
0063:  GOTO   06D
....................       case 6 : delay_ms(6); 
0064:  MOVLW  06
0065:  MOVWF  2D
0066:  CALL   02F
....................                bit_set(PORTD,0); 
0067:  BSF    08.0
....................          break; 
0068:  GOTO   06D
....................       case 7 : delay_ms(7); 
0069:  MOVLW  07
006A:  MOVWF  2D
006B:  CALL   02F
....................                bit_set(PORTD,0); 
006C:  BSF    08.0
....................          break; 
....................    } 
....................       delay_ms(1); 
006D:  MOVLW  01
006E:  MOVWF  2D
006F:  CALL   02F
....................       bit_clear(PORTD,0); 
0070:  BCF    08.0
0071:  BCF    0A.3
0072:  BCF    0A.4
0073:  GOTO   083 (RETURN)
.................... } 
.................... //***************************************** 

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
