CCS PCM C Compiler, Version 5.008, 5967               24-jun-14 09:30

               Filename:   D:\IGNACIO\Programacion\Microcontroladores\PicC\16f877a\PWM2_PR\PWM2.lst

               ROM used:   620 words (8%)
                           Largest free fragment is 2048
               RAM used:   20 (6%) at main() level
                           35 (10%) worst case
               Stack used: 2 locations (1 in main + 1 for interrupts)
               Stack size: 7

*
0000:  NOP
0001:  MOVLW  01
0002:  MOVWF  0A
0003:  GOTO   1E9
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
*
0066:  MOVLW  8E
0067:  MOVWF  77
0068:  MOVF   2E,W
0069:  MOVWF  78
006A:  MOVF   2D,W
006B:  MOVWF  79
006C:  CLRF   7A
006D:  MOVF   78,F
006E:  BTFSS  03.2
006F:  GOTO   07A
0070:  MOVF   79,W
0071:  MOVWF  78
0072:  CLRF   79
0073:  MOVLW  08
0074:  SUBWF  77,F
0075:  MOVF   78,F
0076:  BTFSS  03.2
0077:  GOTO   07A
0078:  CLRF   77
0079:  GOTO   082
007A:  BCF    03.0
007B:  BTFSC  78.7
007C:  GOTO   081
007D:  RLF    79,F
007E:  RLF    78,F
007F:  DECF   77,F
0080:  GOTO   07A
0081:  BCF    78.7
0082:  BCF    0A.3
0083:  BCF    0A.4
0084:  GOTO   232 (RETURN)
0085:  MOVF   2D,W
0086:  BTFSC  03.2
0087:  GOTO   0F5
0088:  MOVWF  35
0089:  MOVF   31,W
008A:  BTFSC  03.2
008B:  GOTO   0F5
008C:  ADDWF  35,F
008D:  BTFSC  03.0
008E:  GOTO   096
008F:  MOVLW  7F
0090:  SUBWF  35,F
0091:  BTFSS  03.0
0092:  GOTO   0F5
0093:  BTFSC  03.2
0094:  GOTO   0F5
0095:  GOTO   09A
0096:  MOVLW  81
0097:  ADDWF  35,F
0098:  BTFSC  03.0
0099:  GOTO   0F5
009A:  MOVF   35,W
009B:  MOVWF  77
009C:  CLRF   78
009D:  CLRF   79
009E:  CLRF   7A
009F:  MOVF   2E,W
00A0:  MOVWF  39
00A1:  BSF    39.7
00A2:  MOVF   2F,W
00A3:  MOVWF  38
00A4:  MOVF   30,W
00A5:  MOVWF  37
00A6:  MOVLW  18
00A7:  MOVWF  35
00A8:  CLRF   36
00A9:  BTFSS  37.0
00AA:  GOTO   0C3
00AB:  MOVF   34,W
00AC:  ADDWF  7A,F
00AD:  BTFSS  03.0
00AE:  GOTO   0B5
00AF:  INCF   79,F
00B0:  BTFSS  03.2
00B1:  GOTO   0B5
00B2:  INCF   78,F
00B3:  BTFSC  03.2
00B4:  BSF    36.7
00B5:  MOVF   33,W
00B6:  ADDWF  79,F
00B7:  BTFSS  03.0
00B8:  GOTO   0BC
00B9:  INCF   78,F
00BA:  BTFSC  03.2
00BB:  BSF    36.7
00BC:  MOVF   32,W
00BD:  MOVWF  2F
00BE:  BSF    2F.7
00BF:  MOVF   2F,W
00C0:  ADDWF  78,F
00C1:  BTFSC  03.0
00C2:  BSF    36.7
00C3:  RLF    36,F
00C4:  RRF    78,F
00C5:  RRF    79,F
00C6:  RRF    7A,F
00C7:  RRF    39,F
00C8:  RRF    38,F
00C9:  RRF    37,F
00CA:  BCF    03.0
00CB:  DECFSZ 35,F
00CC:  GOTO   0A8
00CD:  MOVLW  01
00CE:  ADDWF  77,F
00CF:  BTFSC  03.0
00D0:  GOTO   0F5
00D1:  BTFSC  78.7
00D2:  GOTO   0DA
00D3:  RLF    39,F
00D4:  RLF    7A,F
00D5:  RLF    79,F
00D6:  RLF    78,F
00D7:  DECF   77,F
00D8:  BTFSC  03.2
00D9:  GOTO   0F5
00DA:  BTFSS  39.7
00DB:  GOTO   0EB
00DC:  INCF   7A,F
00DD:  BTFSS  03.2
00DE:  GOTO   0EB
00DF:  INCF   79,F
00E0:  BTFSS  03.2
00E1:  GOTO   0EB
00E2:  INCF   78,F
00E3:  BTFSS  03.2
00E4:  GOTO   0EB
00E5:  RRF    78,F
00E6:  RRF    79,F
00E7:  RRF    7A,F
00E8:  INCF   77,F
00E9:  BTFSC  03.2
00EA:  GOTO   0F5
00EB:  MOVF   2E,W
00EC:  MOVWF  36
00ED:  MOVF   32,W
00EE:  XORWF  36,F
00EF:  BTFSS  36.7
00F0:  GOTO   0F3
00F1:  BSF    78.7
00F2:  GOTO   0F9
00F3:  BCF    78.7
00F4:  GOTO   0F9
00F5:  CLRF   77
00F6:  CLRF   78
00F7:  CLRF   79
00F8:  CLRF   7A
00F9:  BCF    0A.3
00FA:  BCF    0A.4
00FB:  GOTO   241 (RETURN)
00FC:  MOVF   2F,W
00FD:  BTFSC  03.2
00FE:  GOTO   1C1
00FF:  MOVWF  3B
0100:  MOVF   33,W
0101:  BTFSC  03.2
0102:  GOTO   1C1
0103:  SUBWF  3B,F
0104:  BTFSS  03.0
0105:  GOTO   10B
0106:  MOVLW  7F
0107:  ADDWF  3B,F
0108:  BTFSC  03.0
0109:  GOTO   1C1
010A:  GOTO   111
010B:  MOVLW  81
010C:  SUBWF  3B,F
010D:  BTFSS  03.0
010E:  GOTO   1C1
010F:  BTFSC  03.2
0110:  GOTO   1C1
0111:  MOVF   3B,W
0112:  MOVWF  77
0113:  CLRF   78
0114:  CLRF   79
0115:  CLRF   7A
0116:  CLRF   3A
0117:  MOVF   30,W
0118:  MOVWF  39
0119:  BSF    39.7
011A:  MOVF   31,W
011B:  MOVWF  38
011C:  MOVF   32,W
011D:  MOVWF  37
011E:  MOVLW  19
011F:  MOVWF  3B
0120:  MOVF   36,W
0121:  SUBWF  37,F
0122:  BTFSC  03.0
0123:  GOTO   134
0124:  MOVLW  01
0125:  SUBWF  38,F
0126:  BTFSC  03.0
0127:  GOTO   134
0128:  SUBWF  39,F
0129:  BTFSC  03.0
012A:  GOTO   134
012B:  SUBWF  3A,F
012C:  BTFSC  03.0
012D:  GOTO   134
012E:  INCF   3A,F
012F:  INCF   39,F
0130:  INCF   38,F
0131:  MOVF   36,W
0132:  ADDWF  37,F
0133:  GOTO   166
0134:  MOVF   35,W
0135:  SUBWF  38,F
0136:  BTFSC  03.0
0137:  GOTO   14F
0138:  MOVLW  01
0139:  SUBWF  39,F
013A:  BTFSC  03.0
013B:  GOTO   14F
013C:  SUBWF  3A,F
013D:  BTFSC  03.0
013E:  GOTO   14F
013F:  INCF   3A,F
0140:  INCF   39,F
0141:  MOVF   35,W
0142:  ADDWF  38,F
0143:  MOVF   36,W
0144:  ADDWF  37,F
0145:  BTFSS  03.0
0146:  GOTO   166
0147:  INCF   38,F
0148:  BTFSS  03.2
0149:  GOTO   166
014A:  INCF   39,F
014B:  BTFSS  03.2
014C:  GOTO   166
014D:  INCF   3A,F
014E:  GOTO   166
014F:  MOVF   34,W
0150:  IORLW  80
0151:  SUBWF  39,F
0152:  BTFSC  03.0
0153:  GOTO   165
0154:  MOVLW  01
0155:  SUBWF  3A,F
0156:  BTFSC  03.0
0157:  GOTO   165
0158:  INCF   3A,F
0159:  MOVF   34,W
015A:  IORLW  80
015B:  ADDWF  39,F
015C:  MOVF   35,W
015D:  ADDWF  38,F
015E:  BTFSS  03.0
015F:  GOTO   143
0160:  INCF   39,F
0161:  BTFSS  03.2
0162:  GOTO   143
0163:  INCF   3A,F
0164:  GOTO   143
0165:  BSF    7A.0
0166:  DECFSZ 3B,F
0167:  GOTO   169
0168:  GOTO   174
0169:  BCF    03.0
016A:  RLF    37,F
016B:  RLF    38,F
016C:  RLF    39,F
016D:  RLF    3A,F
016E:  BCF    03.0
016F:  RLF    7A,F
0170:  RLF    79,F
0171:  RLF    78,F
0172:  RLF    3C,F
0173:  GOTO   120
0174:  BTFSS  3C.0
0175:  GOTO   17C
0176:  BCF    03.0
0177:  RRF    78,F
0178:  RRF    79,F
0179:  RRF    7A,F
017A:  RRF    3C,F
017B:  GOTO   17F
017C:  DECF   77,F
017D:  BTFSC  03.2
017E:  GOTO   1C1
017F:  BTFSC  3C.7
0180:  GOTO   1A8
0181:  BCF    03.0
0182:  RLF    37,F
0183:  RLF    38,F
0184:  RLF    39,F
0185:  RLF    3A,F
0186:  MOVF   36,W
0187:  SUBWF  37,F
0188:  BTFSC  03.0
0189:  GOTO   194
018A:  MOVLW  01
018B:  SUBWF  38,F
018C:  BTFSC  03.0
018D:  GOTO   194
018E:  SUBWF  39,F
018F:  BTFSC  03.0
0190:  GOTO   194
0191:  SUBWF  3A,F
0192:  BTFSS  03.0
0193:  GOTO   1B7
0194:  MOVF   35,W
0195:  SUBWF  38,F
0196:  BTFSC  03.0
0197:  GOTO   19F
0198:  MOVLW  01
0199:  SUBWF  39,F
019A:  BTFSC  03.0
019B:  GOTO   19F
019C:  SUBWF  3A,F
019D:  BTFSS  03.0
019E:  GOTO   1B7
019F:  MOVF   34,W
01A0:  IORLW  80
01A1:  SUBWF  39,F
01A2:  BTFSC  03.0
01A3:  GOTO   1A8
01A4:  MOVLW  01
01A5:  SUBWF  3A,F
01A6:  BTFSS  03.0
01A7:  GOTO   1B7
01A8:  INCF   7A,F
01A9:  BTFSS  03.2
01AA:  GOTO   1B7
01AB:  INCF   79,F
01AC:  BTFSS  03.2
01AD:  GOTO   1B7
01AE:  INCF   78,F
01AF:  BTFSS  03.2
01B0:  GOTO   1B7
01B1:  INCF   77,F
01B2:  BTFSC  03.2
01B3:  GOTO   1C1
01B4:  RRF    78,F
01B5:  RRF    79,F
01B6:  RRF    7A,F
01B7:  MOVF   30,W
01B8:  MOVWF  3B
01B9:  MOVF   34,W
01BA:  XORWF  3B,F
01BB:  BTFSS  3B.7
01BC:  GOTO   1BF
01BD:  BSF    78.7
01BE:  GOTO   1C5
01BF:  BCF    78.7
01C0:  GOTO   1C5
01C1:  CLRF   77
01C2:  CLRF   78
01C3:  CLRF   79
01C4:  CLRF   7A
01C5:  BCF    0A.3
01C6:  BCF    0A.4
01C7:  GOTO   257 (RETURN)
01C8:  MOVLW  8E
01C9:  MOVWF  77
01CA:  MOVF   2B,W
01CB:  SUBWF  77,F
01CC:  MOVF   2C,W
01CD:  MOVWF  79
01CE:  MOVF   2D,W
01CF:  MOVWF  78
01D0:  BSF    79.7
01D1:  MOVF   77,F
01D2:  BTFSC  03.2
01D3:  GOTO   1DF
01D4:  BCF    03.0
01D5:  MOVF   79,F
01D6:  BTFSS  03.2
01D7:  GOTO   1DB
01D8:  MOVF   78,F
01D9:  BTFSC  03.2
01DA:  GOTO   1DF
01DB:  RRF    79,F
01DC:  RRF    78,F
01DD:  DECFSZ 77,F
01DE:  GOTO   1D4
01DF:  BTFSS  2C.7
01E0:  GOTO   1E6
01E1:  COMF   78,F
01E2:  COMF   79,F
01E3:  INCF   78,F
01E4:  BTFSC  03.2
01E5:  INCF   79,F
01E6:  BCF    0A.3
01E7:  BCF    0A.4
01E8:  GOTO   260 (RETURN)
....................  
.................... #list 
....................  
.................... #device ADC=16 
.................... #device ICD=TRUE 
.................... #fuses HS,NOWDT,NOPROTECT,NOLVP 
.................... #use delay(crystal=20000000) 
....................  
.................... #use FAST_IO(B) 
....................  
.................... long cont; 
.................... long comp1; 
.................... //#INT_RTCC 
.................... //void  RTCC_isr(void)  
.................... //{ 
....................  
.................... //} 
.................... //---------------------------------- 
.................... #INT_RTCC 
.................... void RTCC_isr() //function interrupción TMR0 
....................    {    
....................    output_toggle(PIN_B2); 
*
002F:  MOVLW  04
0030:  XORWF  06,F
....................    set_TIMER0(5); //inicializa el timer0 para que cuente 0.2 us 
0031:  MOVLW  05
0032:  MOVWF  01
....................    cont++; 
0033:  INCF   27,F
0034:  BTFSC  03.2
0035:  INCF   28,F
....................    //Giro en un sentido 
....................    if(input(PIN_B0)==1){ 
0036:  BTFSS  06.0
0037:  GOTO   04A
....................       if ((int16)cont==(int16)10){ cont=0; 
0038:  MOVF   27,W
0039:  SUBLW  0A
003A:  BTFSS  03.2
003B:  GOTO   042
003C:  MOVF   28,F
003D:  BTFSS  03.2
003E:  GOTO   042
003F:  CLRF   28
0040:  CLRF   27
....................             output_high(PIN_B3);} 
0041:  BSF    06.3
....................       if((int16)comp1==(int16)cont){ 
0042:  MOVF   27,W
0043:  SUBWF  29,W
0044:  BTFSS  03.2
0045:  GOTO   04A
0046:  MOVF   28,W
0047:  SUBWF  2A,W
0048:  BTFSC  03.2
....................             output_low(PIN_B3);} 
0049:  BCF    06.3
....................    } 
....................    if (input(PIN_B0)==0) 
004A:  BTFSS  06.0
....................    output_low(PIN_B3); 
004B:  BCF    06.3
....................     //--------------Giro opuesto---------------- 
....................        if(input(PIN_B1)==1){ 
004C:  BTFSS  06.1
004D:  GOTO   060
....................       if ((int16)cont==(int16)10){ cont=0; 
004E:  MOVF   27,W
004F:  SUBLW  0A
0050:  BTFSS  03.2
0051:  GOTO   058
0052:  MOVF   28,F
0053:  BTFSS  03.2
0054:  GOTO   058
0055:  CLRF   28
0056:  CLRF   27
....................             output_high(PIN_B4);} 
0057:  BSF    06.4
....................       if((int16)comp1==(int16)cont){ 
0058:  MOVF   27,W
0059:  SUBWF  29,W
005A:  BTFSS  03.2
005B:  GOTO   060
005C:  MOVF   28,W
005D:  SUBWF  2A,W
005E:  BTFSC  03.2
....................             output_low(PIN_B4);} 
005F:  BCF    06.4
....................    } 
....................    if (input(PIN_B1)==0) 
0060:  BTFSS  06.1
....................    output_low(PIN_B4); 
0061:  BCF    06.4
....................      
0062:  BCF    0B.2
0063:  BCF    0A.3
0064:  BCF    0A.4
0065:  GOTO   01B
....................    } 
....................  
....................   
....................     
....................  
....................  
....................  
.................... //--------------------------------- 
....................    void main() 
*
01E9:  MOVF   03,W
01EA:  ANDLW  1F
01EB:  MOVWF  03
01EC:  BSF    03.5
01ED:  BSF    1F.0
01EE:  BSF    1F.1
01EF:  BSF    1F.2
01F0:  BCF    1F.3
01F1:  MOVLW  07
01F2:  MOVWF  1C
01F3:  BCF    03.7
.................... {  //#byte TRISB=0b11000000; 
....................    set_TIMER0(5); //inicializa el timer0 para que cuente 0.2 us 
01F4:  MOVLW  05
01F5:  BCF    03.5
01F6:  MOVWF  01
....................    SET_TRIS_B(0xC0);    //configura PORTB entrada / 0=salida / 1=entrada 
01F7:  MOVLW  C0
01F8:  BSF    03.5
01F9:  MOVWF  06
....................    OUTPUT_D(0x00);   //inicializando PORTD en 0x00 
01FA:  CLRF   08
01FB:  BCF    03.5
01FC:  CLRF   08
....................    //#byte PORTB=0x00; 
....................    setup_adc_ports(AN0); 
01FD:  BSF    03.5
01FE:  BCF    1F.0
01FF:  BSF    1F.1
0200:  BSF    1F.2
0201:  BSF    1F.3
....................    setup_adc(ADC_CLOCK_INTERNAL); 
0202:  BCF    1F.6
0203:  BCF    03.5
0204:  BSF    1F.6
0205:  BSF    1F.7
0206:  BSF    03.5
0207:  BCF    1F.7
0208:  BCF    03.5
0209:  BSF    1F.0
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1);//|RTCC_8_bit);      //51.2 us overflow 
020A:  BSF    03.5
020B:  MOVF   01,W
020C:  ANDLW  C7
020D:  IORLW  08
020E:  MOVWF  01
....................   // setup_timer_1(T1_INTERNAL|T1_DIV_BY_1);      //13.1 ms overflow 
....................  
....................   // setup_ccp1(CCP_COMPARE_SET_ON_MATCH); 
....................  
....................   // enable_interrupts(INT_RTCC); 
....................    enable_interrupts(INT_RTCC); 
020F:  BCF    03.5
0210:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0211:  MOVLW  C0
0212:  IORWF  0B,F
....................    cont=0; 
0213:  CLRF   28
0214:  CLRF   27
....................    comp1=0; 
0215:  CLRF   2A
0216:  CLRF   29
....................  
....................    while(TRUE) 
....................    { 
....................  
....................    set_adc_channel(0); 
0217:  MOVLW  00
0218:  MOVWF  78
0219:  MOVF   1F,W
021A:  ANDLW  C7
021B:  IORWF  78,W
021C:  MOVWF  1F
....................    delay_us(20);//tiempo  de offset necesario 
021D:  MOVLW  20
021E:  MOVWF  77
021F:  DECFSZ 77,F
0220:  GOTO   21F
0221:  GOTO   222
0222:  NOP
....................    comp1=((read_adc())*10.0/1024.0);  
0223:  BSF    1F.2
0224:  BTFSC  1F.2
0225:  GOTO   224
0226:  MOVF   1E,W
0227:  MOVWF  7A
0228:  BSF    03.5
0229:  MOVF   1E,W
022A:  BCF    03.5
022B:  MOVWF  2B
022C:  MOVF   1E,W
022D:  MOVWF  2C
022E:  MOVWF  2E
022F:  MOVF   2B,W
0230:  MOVWF  2D
0231:  GOTO   066
0232:  MOVF   7A,W
0233:  MOVWF  30
0234:  MOVF   79,W
0235:  MOVWF  2F
0236:  MOVF   78,W
0237:  MOVWF  2E
0238:  MOVF   77,W
0239:  MOVWF  2D
023A:  CLRF   34
023B:  CLRF   33
023C:  MOVLW  20
023D:  MOVWF  32
023E:  MOVLW  82
023F:  MOVWF  31
0240:  GOTO   085
0241:  MOVF   7A,W
0242:  MOVWF  2E
0243:  MOVF   79,W
0244:  MOVWF  2D
0245:  MOVF   78,W
0246:  MOVWF  2C
0247:  MOVF   77,W
0248:  MOVWF  2B
0249:  MOVF   7A,W
024A:  MOVWF  32
024B:  MOVF   79,W
024C:  MOVWF  31
024D:  MOVF   78,W
024E:  MOVWF  30
024F:  MOVF   77,W
0250:  MOVWF  2F
0251:  CLRF   36
0252:  CLRF   35
0253:  CLRF   34
0254:  MOVLW  89
0255:  MOVWF  33
0256:  GOTO   0FC
0257:  MOVF   7A,W
0258:  MOVWF  2E
0259:  MOVF   79,W
025A:  MOVWF  2D
025B:  MOVF   78,W
025C:  MOVWF  2C
025D:  MOVF   77,W
025E:  MOVWF  2B
025F:  GOTO   1C8
0260:  MOVF   79,W
0261:  MOVWF  2A
0262:  MOVF   78,W
0263:  MOVWF  29
....................    delay_us(20);//tiempo  de offset necesario 
0264:  MOVLW  20
0265:  MOVWF  77
0266:  DECFSZ 77,F
0267:  GOTO   266
0268:  GOTO   269
0269:  NOP
026A:  GOTO   217
....................   
....................    } 
....................  
.................... } 
....................  
026B:  GOTO   26B

Configuration Fuses:
   Word  1: 373A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT DEBUG NOPROTECT

   Some fuses have been forced to be compatible with the ICD debugger.
